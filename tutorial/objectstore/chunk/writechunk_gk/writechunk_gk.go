//--------------------------------------
// This file is autogenerated by grackle
// DO NOT MANUALLY EDIT THIS FILE
//--------------------------------------

package writechunk_gk

import (
	"github.com/tchajed/marshal"
)

type S struct {
	WriteId uint64
	Chunk   []byte
	Index   uint64
}

func Marshal(prefix []byte, w S) []byte {
	var enc = prefix

	enc = marshal.WriteInt(enc, w.WriteId)
	enc = marshal.WriteInt(enc, uint64(len(w.Chunk)))
	enc = marshal.WriteBytes(enc, w.Chunk)
	enc = marshal.WriteInt(enc, w.Index)

	return enc
}

func Unmarshal(s []byte) (S, []byte) {
	var enc = s // Needed for goose compatibility
	var writeId uint64
	var chunk []byte
	var index uint64

	writeId, enc = marshal.ReadInt(enc)
	var chunkLen uint64
	var chunkBytes []byte
	chunkLen, enc = marshal.ReadInt(enc)
	chunkBytes, enc = marshal.ReadBytesCopy(enc, chunkLen)
	chunk = chunkBytes
	index, enc = marshal.ReadInt(enc)

	return S{
		WriteId: writeId,
		Chunk:   chunk,
		Index:   index,
	}, enc
}
