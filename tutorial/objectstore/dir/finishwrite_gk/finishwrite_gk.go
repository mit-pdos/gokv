//--------------------------------------
// This file is autogenerated by grackle
// DO NOT MANUALLY EDIT THIS FILE
//--------------------------------------

package finishwrite_gk

import (
	"github.com/tchajed/marshal"
)

type S struct {
	WriteId uint64
	Keyname string
}

func Marshal(prefix []byte, f S) []byte {
	var enc = prefix

	enc = marshal.WriteInt(enc, f.WriteId)
	keynameBytes := []byte(f.Keyname)
	enc = marshal.WriteInt(enc, uint64(len(keynameBytes)))
	enc = marshal.WriteBytes(enc, keynameBytes)

	return enc
}

func Unmarshal(s []byte) (S, []byte) {
	var enc = s // Needed for goose compatibility
	var writeId uint64
	var keyname string

	writeId, enc = marshal.ReadInt(enc)
	var keynameLen uint64
	var keynameBytes []byte
	keynameLen, enc = marshal.ReadInt(enc)
	keynameBytes, enc = marshal.ReadBytesCopy(enc, keynameLen)
	keyname = string(keynameBytes)

	return S{
		WriteId: writeId,
		Keyname: keyname,
	}, enc
}
