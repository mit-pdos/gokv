//--------------------------------------
// This file is autogenerated by grackle
// DO NOT MANUALLY EDIT THIS FILE
//--------------------------------------

package recordchunk_gk

import (
	"github.com/tchajed/marshal"
)

type S struct {
	WriteId     uint64
	Server      uint64
	ContentHash string
	Index       uint64
}

func Marshal(r S, prefix []byte) []byte {
	var enc = prefix

	enc = marshal.WriteInt(enc, r.WriteId)
	enc = marshal.WriteInt(enc, r.Server)
	contenthashBytes := []byte(r.ContentHash)
	enc = marshal.WriteInt(enc, uint64(len(contenthashBytes)))
	enc = marshal.WriteBytes(enc, contenthashBytes)
	enc = marshal.WriteInt(enc, r.Index)

	return enc
}

func Unmarshal(s []byte) (S, []byte) {
	var enc = s // Needed for goose compatibility
	var writeId uint64
	var server uint64
	var contentHash string
	var index uint64

	writeId, enc = marshal.ReadInt(enc)
	server, enc = marshal.ReadInt(enc)
	var contentHashLen uint64
	var contentHashBytes []byte
	contentHashLen, enc = marshal.ReadInt(enc)
	contentHashBytes, enc = marshal.ReadBytesCopy(enc, contentHashLen)
	contentHash = string(contentHashBytes)
	index, enc = marshal.ReadInt(enc)

	return S{
		WriteId:     writeId,
		Server:      server,
		ContentHash: contentHash,
		Index:       index,
	}, enc
}
